<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>爬虫 --- 以爬取笔趣阁小说为例</title>
    <link href="/2023/08/31/%E7%88%AC%E8%99%AB%20%E2%80%94%20%E4%BB%A5%E7%88%AC%E5%8F%96%E7%AC%94%E8%B6%A3%E9%98%81%E5%B0%8F%E8%AF%B4%E4%B8%BA%E4%BE%8B/"/>
    <url>/2023/08/31/%E7%88%AC%E8%99%AB%20%E2%80%94%20%E4%BB%A5%E7%88%AC%E5%8F%96%E7%AC%94%E8%B6%A3%E9%98%81%E5%B0%8F%E8%AF%B4%E4%B8%BA%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="爬虫-—-以爬取笔趣阁小说为例"><a href="#爬虫-—-以爬取笔趣阁小说为例" class="headerlink" title="爬虫 — 以爬取笔趣阁小说为例"></a>爬虫 — 以爬取笔趣阁小说为例</h1><h4 id="1-发送请求"><a href="#1-发送请求" class="headerlink" title="1.发送请求"></a>1.发送请求</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br>url = <span class="hljs-string">&quot;https://www.xzmncy.com/list/5418/2610707.html&quot;</span><br>headers = &#123;<br>    <span class="hljs-string">&quot;User-Agent&quot;</span> : <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0&quot;</span><br>&#125;<br>response = requests.get(url,headers)<br></code></pre></td></tr></table></figure><p>这是requests请求，若返回response值为200，则表示请求成功</p><h4 id="2-获取数据"><a href="#2-获取数据" class="headerlink" title="2.获取数据"></a>2.获取数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">response = requests.get(url,headers).text<br></code></pre></td></tr></table></figure><p>可以通过以上方法返回得到的html文件内容，而文件中有很多标签在里面，不能直接获取想要的信息，所以需要数据解析</p><h4 id="3-解析数据"><a href="#3-解析数据" class="headerlink" title="3.解析数据"></a>3.解析数据</h4><p>有以下几种途径：css、xpath、re正则表达 等等</p><p>让我们来看看分别用这三种方法怎么去解析到一个章节的标题</p><h5 id="css"><a href="#css" class="headerlink" title="css"></a>css</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> parsel<br>selector = parsel.Selector(response)<br>novel_title = selector.css(<span class="hljs-string">&quot;.bookname h1::text&quot;</span>).get()<br></code></pre></td></tr></table></figure><p>这种方法通过css选择器进行选择</p><h5 id="xpath"><a href="#xpath" class="headerlink" title="xpath"></a>xpath</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> parsel<br>selector = parsel.Selector(response)<br>novel_title = selector.xpath(<span class="hljs-string">&quot;//*[@class=&quot;</span>bookname<span class="hljs-string">&quot;]/h1/text()&quot;</span>).get()<br></code></pre></td></tr></table></figure><p>注意text后面的()</p><h5 id="re"><a href="#re" class="headerlink" title="re"></a>re</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br>novel_title = re.findall(<span class="hljs-string">&quot;&lt;h1&gt;(.*?)&lt;/h1&gt;&quot;</span>,response)[<span class="hljs-number">0</span>]<br></code></pre></td></tr></table></figure><p>这里是因为h1在html文件中只有一个，故我直接导入。获取的数据是一个列表，所以我后面做了个且切片来直接获取字符串</p><p>*注意：以上方法各有利弊，选择合适的方式来解析数据</p><h4 id="4-保存数据"><a href="#4-保存数据" class="headerlink" title="4.保存数据"></a>4.保存数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;file_name&quot;</span>+<span class="hljs-string">&quot;.txt&quot;</span>,mode=<span class="hljs-string">&quot;w&quot;</span>,encoding=<span class="hljs-string">&quot;utf-8&quot;</span>) <span class="hljs-keyword">as</span> f:  <span class="hljs-comment">#w是写入但是覆盖，a是追加写入，写入文件末尾 wb是二进制写入</span><br>f.write(novel_context)  <span class="hljs-comment">#写入文件</span><br></code></pre></td></tr></table></figure><p>with open(download_path,mode&#x3D;””,encoding&#x3D;”utf-8”)中间的download_path可以写绝对路径</p><h4 id="以上思路已经理清楚了，下面开始实践："><a href="#以上思路已经理清楚了，下面开始实践：" class="headerlink" title="以上思路已经理清楚了，下面开始实践："></a>以上思路已经理清楚了，下面开始实践：</h4><h3 id="爬取一章"><a href="#爬取一章" class="headerlink" title="爬取一章"></a>爬取一章</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> parsel<br><span class="hljs-keyword">import</span> requests<br>url = <span class="hljs-string">&quot;https://www.xzmncy.com/list/5418/2610707.html&quot;</span><br>headers = &#123;<br>    <span class="hljs-string">&quot;User-Agent&quot;</span> : <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0&quot;</span><br>&#125;<br>response = requests.get(url,headers).text<br><br>selector = parsel.Selector(response)<br>novel_title = selector.css(<span class="hljs-string">&quot;.bookname h1::text&quot;</span>).get() <span class="hljs-comment">#css方法解析数据</span><br><br>novel_context_list = selector.css(<span class="hljs-string">&quot;#htmlContent p::text&quot;</span>).getall() <br>novel_context = <span class="hljs-string">&quot;\n&quot;</span>.join(novel_context_list)<br></code></pre></td></tr></table></figure><p>注意：join函数的使用：</p><img src="/.io//08/31/%E7%88%AC%E8%99%AB%20%E2%80%94%20%E4%BB%A5%E7%88%AC%E5%8F%96%E7%AC%94%E8%B6%A3%E9%98%81%E5%B0%8F%E8%AF%B4%E4%B8%BA%E4%BE%8B/p1.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a=[<span class="hljs-string">&quot;1&quot;</span>,<span class="hljs-string">&quot;2&quot;</span>,<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;9&quot;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot; &quot;</span>.join(a))  <span class="hljs-comment">#输出1 2 8 9</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\n&quot;</span>.join(a))  <span class="hljs-comment">#输出1(换行)2(换行)8(换行)9</span><br><br>b=&#123;<span class="hljs-string">&quot;a&quot;</span>:<span class="hljs-number">1</span>,<span class="hljs-string">&quot;b&quot;</span>:<span class="hljs-number">2</span>&#125;<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot; &quot;</span>.join(a))  <span class="hljs-comment">#输出a b</span><br></code></pre></td></tr></table></figure><p>（注意seq不能是int整形）</p><h3 id="爬取各章url"><a href="#爬取各章url" class="headerlink" title="爬取各章url"></a>爬取各章url</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> re<br>url = <span class="hljs-string">&quot;https://www.xzmncy.com/list/18753/&quot;</span><br>headers = &#123;<br>        <span class="hljs-string">&quot;User-Agent&quot;</span> : <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0&quot;</span><br>    &#125;<br>response = requests.get(url,headers).text<br>novel_name = re.findall(<span class="hljs-string">&quot;&lt;h1&gt;(.*?)&lt;/h1&gt;&quot;</span>,response)[<span class="hljs-number">0</span>]<br>novel_info = re.findall(<span class="hljs-string">&#x27;&lt;dd&gt;&lt;a href=&quot;(.*?)&quot;&gt;(.*?)&lt;/a&gt;&lt;/dd&gt;&#x27;</span>,response)<br><span class="hljs-keyword">for</span> novel_url_part,novel_title <span class="hljs-keyword">in</span> novel_info:<br>    novel_url = <span class="hljs-string">&quot;https://www.xzmncy.com&quot;</span>+novel_url_part[<span class="hljs-number">0</span>:<span class="hljs-number">24</span>]<br>    <span class="hljs-built_in">print</span>(novel_url)<br>    <span class="hljs-built_in">print</span>(novel_title)<br></code></pre></td></tr></table></figure><p>在小说的列表页面我们可以发现每个标签对应的章节url，此时我们获取的数据是这样的：</p><p><img src="/.io//Users\yyn19\AppData\Roaming\Typora\typora-user-images\image-20230831120348951.png" alt="image-20230831120348951"></p><p>我们就可以用re来解析到各个章节的url和title</p><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> parsel<br>url = <span class="hljs-string">&quot;https://www.xzmncy.com/list/18753/&quot;</span><br>headers = &#123;<br>        <span class="hljs-string">&quot;User-Agent&quot;</span> : <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0&quot;</span><br>    &#125;<br>response = requests.get(url,headers).text<br>novel_name = re.findall(<span class="hljs-string">&quot;&lt;h1&gt;(.*?)&lt;/h1&gt;&quot;</span>,response)[<span class="hljs-number">0</span>]<br>novel_info = re.findall(<span class="hljs-string">&#x27;&lt;dd&gt;&lt;a href=&quot;(.*?)&quot;&gt;(.*?)&lt;/a&gt;&lt;/dd&gt;&#x27;</span>,response)<br><span class="hljs-keyword">for</span> novel_url_part,novel_title <span class="hljs-keyword">in</span> novel_info:<br>    novel_url = <span class="hljs-string">&quot;https://www.xzmncy.com&quot;</span>+novel_url_part[<span class="hljs-number">0</span>:<span class="hljs-number">24</span>]<br>    novel_response = requests.get(novel_url, headers).text<br>    selectors = parsel.Selector(novel_response)<br>    novel_context_list = selectors.css(<span class="hljs-string">&quot;#htmlContent p::text&quot;</span>).getall()<br>    novel_context = <span class="hljs-string">&quot;\n&quot;</span>.join(novel_context_list)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;正在保存&quot;</span>+novel_title)<br>    novel_title = <span class="hljs-string">&quot;*&quot;</span> + novel_title<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(novel_name+<span class="hljs-string">&quot;.txt&quot;</span>,mode=<span class="hljs-string">&quot;a&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        f.write(novel_title)<br>        f.write(<span class="hljs-string">&quot;\n&quot;</span>)<br>        f.write(novel_context)<br>        f.write(<span class="hljs-string">&quot;\n&quot;</span>)<br>        f.write(<span class="hljs-string">&quot;\n&quot;</span>)<br></code></pre></td></tr></table></figure><p>运行代码就可以看到当前的目录下出现一个txt文件，里面就是想要的小说啦~</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CSS选择器</title>
    <link href="/2023/08/23/css%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <url>/2023/08/23/css%E9%80%89%E6%8B%A9%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="引入方式"><a href="#引入方式" class="headerlink" title="引入方式"></a>引入方式</h1><p>引入方式有以下三种：</p><p>1.内嵌式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;!-- 内嵌式 --&gt;<br>&lt;!DOCTYPE <span class="hljs-selector-tag">html</span>&gt;<br>&lt;<span class="hljs-selector-tag">html</span> lang=&quot;en&quot;&gt;<br>&lt;head&gt;<br>    &lt;meta charset=&quot;UTF-<span class="hljs-number">8</span>&quot;&gt;<br>    &lt;meta name=&quot;viewport&quot; <span class="hljs-attribute">content</span>=&quot;<span class="hljs-attribute">width</span>=device-<span class="hljs-attribute">width</span>, initial-scale=<span class="hljs-number">1.0</span>&quot;&gt;<br>    &lt;title&gt;Document&lt;/title&gt;<br>    &lt;style&gt;<br>        colour&#123;<br>colour:pink;<br>        &#125;<br>    &lt;/style&gt;<br>&lt;/head&gt;<br></code></pre></td></tr></table></figure><p>2.外联式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 外联式 --&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./111.css&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 111为引入文件名 --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br></code></pre></td></tr></table></figure><p>3.行内式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 行内式 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;colour&quot;</span>&gt;</span><br>        abcd<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: aqua;font-size: large;&quot;</span>&gt;</span>abab<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h1><p>一共有4种：标签选择器、类选择器、id选择器、通符选择器</p><p>注：一下选择器均是在style标签下的</p><h4 id="1-标签"><a href="#1-标签" class="headerlink" title="1.标签"></a>1.标签</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span>&#123;<br><span class="hljs-attribute">color</span>:blue;<br>&#125;<br></code></pre></td></tr></table></figure><p>所选类型与body中html的文本类型相符(如上文中，其下文body中应该是div)</p><h4 id="2-类选择器"><a href="#2-类选择器" class="headerlink" title="2.类选择器"></a>2.类选择器</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.color-choose</span>&#123;<br><span class="hljs-attribute">color</span>:blue;<br>&#125;<br></code></pre></td></tr></table></figure><p>其html调用方式为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;color-choose&quot;</span>&gt;</span> abab <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3-id选择器"><a href="#3-id选择器" class="headerlink" title="3.id选择器"></a>3.id选择器</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#color</span>&#123;<br>    <span class="hljs-attribute">color</span>:blue;<br>&#125;<br></code></pre></td></tr></table></figure><p>其html调用方式为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;color&quot;</span>&gt;</span> abab <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>注意：id只得调用一次</p><h4 id="4-通符选择器"><a href="#4-通符选择器" class="headerlink" title="4.通符选择器"></a>4.通符选择器</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css">*&#123;<br>    <span class="hljs-attribute">margin</span>:<span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">padding</span>:<span class="hljs-number">0</span>;<br>&#125;<br>&lt;!-- 清除内外边距 --&gt;<br></code></pre></td></tr></table></figure><p>对全局内容生效</p><h2 id="选择器的选择"><a href="#选择器的选择" class="headerlink" title="选择器的选择"></a>选择器的选择</h2><h4 id="1-后代-（后面所有代）"><a href="#1-后代-（后面所有代）" class="headerlink" title="1.后代  （后面所有代）"></a>1.后代  （后面所有代）</h4><p>问题如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span> abab <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span> 哈哈哈 <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>欲选择div中的p标签，而不是外部的p</p><p>以如下方法实现：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style&gt;<br><span class="hljs-selector-tag">div</span> <span class="hljs-selector-tag">p</span> &#123;<br>        <span class="hljs-attribute">color</span>:blue;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h4 id="2-子代-（后面一代）"><a href="#2-子代-（后面一代）" class="headerlink" title="2.子代  （后面一代）"></a>2.子代  （后面一代）</h4><p>问题是要选中div后面的一代</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span> dd <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span> ddd <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>以如下方法实现：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span>&gt;<span class="hljs-selector-tag">p</span>&#123;<br><span class="hljs-attribute">color</span>:blue;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-并集"><a href="#3-并集" class="headerlink" title="3.并集"></a>3.并集</h4><p>问题：想要让以下这些标签被选到</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span> p <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span> div <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span> span <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span> haha <span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br></code></pre></td></tr></table></figure><p>以下面方法实现：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span>,<span class="hljs-selector-tag">div</span>,<span class="hljs-selector-tag">span</span>,<span class="hljs-selector-tag">h1</span>&#123;<br>    <span class="hljs-attribute">color</span>:blue;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="4-交集"><a href="#4-交集" class="headerlink" title="4.交集"></a>4.交集</h4><p>问题：只想要选中下面p中带class&#x3D;”c”的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;c&quot;</span>&gt;</span>abcd<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;c&quot;</span>&gt;</span>a<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;c&quot;</span>&gt;</span>d<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;c&quot;</span>&gt;</span>b<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p>以下面方法实现：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.c</span>&#123;<br>    <span class="hljs-attribute">color</span>:blue;<br>&#125;<br></code></pre></td></tr></table></figure><p>p是标签，c是类名（前面带个.的）</p><h4 id="5-伪类"><a href="#5-伪类" class="headerlink" title="5.伪类"></a>5.伪类</h4><p>问题：想要让鼠标悬停在如下超链接上能够变色</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;~~~&quot;</span>&gt;</span>传送<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>一下方法实现：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span>&#123;<br><span class="hljs-attribute">color</span>:red;<br><span class="hljs-attribute">background-color</span>:yellow;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>破壳啦</title>
    <link href="/2023/08/21/page1/"/>
    <url>/2023/08/21/page1/</url>
    
    <content type="html"><![CDATA[<p>终于创建好一个博客啦！</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
